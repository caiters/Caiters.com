/*! normalize.css v3.0.1 | MIT License | git.io/normalize */html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background:transparent}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre{overflow:auto}code,kbd,pre,samp{font-family:monospace}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}textarea{overflow:auto}optgroup{font-weight:700}table{border-collapse:collapse;border-spacing:0}td,th{padding:0}.group:after{content:"";display:table;clear:both}.sr-only{position:absolute;left:-10000px;top:auto;width:1px;height:1px;overflow:hidden}body{background:#f8f8f8;font-family:Open Sans,sans-serif}img{max-width:100%}.text--hidden{text-indent:-9999px;display:block}.text--centered{text-align:center}.text--lead{font-size:1.1em;font-weight:100;color:#350077}@media (min-width:768px){.text--lead{font-size:1.3em}}@media (min-width:992px){.text--lead{font-size:1.4em}}.text--body{font-weight:300;font-size:1.1em}@media (min-width:768px){.img--right{float:right;padding-left:2em;padding-bottom:2em}}@media (min-width:768px){.img--max50{max-width:50%}}.img--centered{display:block;margin-left:auto;margin-right:auto}.img--bordered{border:2px solid transparent;transition:border-color .25s}.img--bordered:focus,.img--bordered:hover{border-color:#332379}.no-margins{margin:0}.no-b-margin{margin-bottom:0}.no-t-margin{margin-top:0}.margin-top-1{margin-top:1em}.margin-bottom-1{margin-bottom:1em}.margin-bottom-2{margin-bottom:2em}.margin-bottom-3{margin-bottom:3em}.auto-margin{margin-left:auto;margin-right:auto}.section-margins{margin-top:3em;margin-bottom:3em}.section-padding{padding-top:3em;padding-bottom:3em}.kicker{font-size:.8em;text-transform:uppercase;margin:0;font-weight:400}.kicker+*{margin-top:0}.heading{font-family:brandon-grotesque,sans-serif;font-weight:100;line-height:1.3}.heading--kicker{font-size:.8em;text-transform:uppercase;margin:0;font-weight:400}.heading--kicker+*{margin-top:0}.heading--main{font-size:2.5em;margin-top:0}.heading--secondary{font-size:1.5em;line-height:1.1}.heading--tertiary{font-size:1.3em;font-weight:100}@media (min-width:768px){.heading--main{font-size:3em}.heading--secondary{font-size:2em}.heading--tertiary{font-size:1.5em}}.latest-blog{padding:1em;margin-left:-1em;margin-right:-1em;background:#fff}@media (min-width:768px){.latest-blog{padding:0;margin-left:0;margin-right:0;background:transparent}}.btn{text-transform:uppercase;font-family:brandon-grotesque,sans-serif;padding:.5em 1.5em;text-decoration:none}.btn--solid{background:#332379;color:#fff;-webkit-transition:background-color,.25s;transition:background-color,.25s;border:none}.btn--solid:hover{background-color:#000}.btn--outline{border:1px solid #000}.btn--outline:focus,.btn--outline:hover{background-color:#332379;border-color:#332379}.btn--white{color:#fff;border-color:#fff}.btn--submit{position:relative}.btn--submit:after{background:transparent url(../images/pacman.gif) 0 no-repeat;content:'Please wait...';display:block;position:absolute;left:105%;top:10px;padding-left:30px;width:125px;color:#000;opacity:0;visibility:none;transition:opacity .25s}.btn--submitting{position:relative;background-color:#333}.btn--submitting:after{opacity:1}.inner-wrap{max-width:1000px;margin-left:auto;margin-right:auto;padding-left:1em;padding-right:1em}.inner-wrap:after{content:"";display:table;clear:both}.inner-wrap>:first-child{margin-top:0}@media (min-width:768px){.inner-wrap--center-vert{display:flex;align-items:center}}.main-content{width:100%}@media (min-width:768px){.main-content{margin-top:0}}.site-title{display:block;text-decoration:none;font-family:brandon-grotesque,sans-serif;padding:.5em;color:#332379}.site-title:after{content:"";display:table;clear:both}.site-title:active{color:#000}.site-title__cb{display:block;transition:opacity .25s;float:left}.site-title__cb,.site-title__fe{width:calc(100% - 72px);text-align:left;padding-left:10px;box-sizing:border-box}.site-title__fe{display:block;text-transform:uppercase;font-size:.9em;font-weight:400;transition:opacity .25s;float:left}.site-title:before{content:'';background:transparent url(/images/cb.png) 0 no-repeat;background-size:contain;float:left;width:50px;height:50px}@media (min-width:768px){.site-title{font-size:1.3em;background:#655770;color:#fff;min-height:90px;width:90px;position:absolute;top:0;left:0;padding:1em;text-align:left;box-sizing:border-box;-webkit-transition:background-color,.25s;transition:background-color,.25s}.site-title__cb,.site-title__fe{text-indent:-9999px}.site-title:before{content:url(/images/cb.png);background:transparent none;float:none;position:absolute;left:.35rem;top:50%;transform:translateY(-50%);margin-top:4px;transition:transform .25s}.site-title:focus,.site-title:hover{background-color:#332379}}@media (min-width:992px){.site-title{width:350px;padding-left:90px;padding-right:0;min-height:100px}.site-title__cb,.site-title__fe{width:auto;white-space:pre;text-indent:0}.site-title__fe{font-weight:100}}@media (min-width:1200px){.site-title{width:100px}.site-title__cb,.site-title__fe{display:block;text-indent:-9999px}}@media (min-width:1550px){.site-title{width:350px}.site-title__cb,.site-title__fe{width:auto;white-space:pre;text-indent:0}}.open-mobile-nav{display:block;position:absolute;top:50%;right:.5em;background:#fff;border:2px solid #332379;text-transform:uppercase;color:#332379;transform:translateY(-50%)}@media (min-width:768px){.open-mobile-nav{display:none}}.main-header{text-align:center;background:#fff;width:100%;box-sizing:border-box;position:relative}.main-nav{max-height:0;transition:max-height .25s;position:absolute;top:100%;left:0;right:0;z-index:4;background:#fff;overflow:hidden}.main-nav a{text-decoration:none;color:#222}.main-nav__list{list-style:none outside;margin:0;padding:0 0 1em}.main-nav__open{max-height:200px}.main-nav__item{margin-bottom:1em;margin-top:1em}@media (min-width:768px){.main-nav{opacity:1;max-height:none;position:static;text-align:center}.main-nav__list{display:flex;padding:0 0 0 90px;max-width:800px;margin-left:auto;margin-right:auto;min-height:90px}.main-nav__item{width:20%;margin:0}.main-nav__link{position:relative;display:block;padding:1em;height:100%;box-sizing:border-box;width:100%;display:flex;justify-content:center;flex-direction:column}.main-nav__link:before{content:'';left:0;right:0;bottom:0;height:3px;background:#332379;position:absolute;width:100%;opacity:0;-webkit-transition:max-width,.35s;transition:max-width,.35s}.main-nav__link:focus:before,.main-nav__link:hover:before{opacity:1}.main-nav span{display:block;position:relative;z-index:3;-webkit-transition:color,.25s;transition:color,.25s}}@media (min-width:992px){.main-nav__list{padding-left:350px;min-height:100px}}@media (min-width:1200px){.main-nav__list{padding-left:0}}.trio a{text-decoration:none;color:#000}.trio img{margin-bottom:.5em;display:block;margin-left:auto;margin-right:auto}.trio__col{text-align:center;margin-bottom:3em}.trio__col:last-child{margin-bottom:0}@media (min-width:768px){.trio__col{width:33.333333%;float:left}}.trio--img{font-size:.9em}@media (min-width:480px){.trio--img .trio__col{width:33.333333%;float:left;box-sizing:border-box;text-align:center;padding-left:.5em;padding-right:.5em;margin-bottom:0}.trio--img img{margin:0}.trio--img a{color:#222;display:block;background:#fff;border:1px solid #e6e6e6}.trio--img span{display:block;padding:1em}}@media (min-width:768px){.trio--img .trio__col{position:relative}.trio--img img{display:block;width:100%;-webkit-transition:transform,.5s;transition:transform,.5s}.trio--img span{position:absolute;top:1em;left:0;right:0;z-index:2;text-transform:uppercase}.trio--img a{color:#fff;overflow:hidden;position:relative}.trio--img a:before{content:'';background:rgba(0,0,0,.4);top:0;left:0;right:0;bottom:0;-webkit-transition:background-color,.25s;transition:background-color,.25s;position:absolute;z-index:1}.trio--img a:focus img,.trio--img a:hover img{transform:scale(1.1)}.trio--img a:focus:before,.trio--img a:hover:before{background-color:rgba(0,0,0,.8)}}.intro{padding-bottom:2em}@media (min-width:768px){.intro{padding-top:1em;padding-bottom:1em;width:50%;float:left;font-size:1.2em;font-family:open sans;font-weight:300;padding-right:2em;box-sizing:border-box}}.latest-blog .heading a{color:currentColor;text-decoration:none;transition:color .25s}.latest-blog .heading a:focus,.latest-blog .heading a:hover{color:#332379}@media (min-width:768px){.latest-blog{width:50%;float:left}}.blog-posts-list{list-style:none outside;margin:0;padding:0}.blog-posts-list a{text-decoration:none;color:#222}.blog-posts-list__item{padding-bottom:2em;margin-bottom:2em;border-bottom:1px solid #ccc}.blog-post date{text-transform:uppercase;font-family:brandon-grotesque,sans-serif}.blog-post p{font-weight:300}.blog-post .btn{display:inline-block}.page-header{background:transparent url(../images/banner-generic.jpg) 50% no-repeat;background-size:cover;text-align:center;padding:1em;height:150px;min-height:150px;display:flex;flex-direction:column;color:#fff;align-items:center;justify-content:center}.page-header .heading--main{width:100%;margin-bottom:0}@media (min-width:768px){.page-header{min-height:300px;height:300px}}.blog-date{font-family:brandon-grotesque,sans-serif;text-transform:uppercase;font-weight:100;margin-bottom:.5em}.blog-post-body{margin-top:3em;line-height:1.6em}.blog-post-body code{font-size:1.2em;color:#009607}.blog-post-body a{color:#332379}.recent-project{background:transparent none 50% no-repeat;background-size:cover;text-align:center;padding:1em;height:300px;min-height:300px;display:flex}.recent-project--wa{background-image:url(../images/banner-wa.jpg)}.recent-project--pfhy{background-image:url(../images/banner-pfhy.jpg)}.recent-project--xtract{background-image:url(../images/banner-xtract.jpg)}.recent-project--lendingqb{background-image:url(../images/banner-lendingqb.jpg)}.recent-project--kevo{background-image:url(../images/banner-kevo.jpg);background-size:cover}.recent-project--placeunicorn{background-image:url(../images/banner-placeunicorn.jpg);background-position:top}.recent-project--canari{background-image:url(../images/banner-canari.jpg)}.recent-project--uc{background-image:url(../images/banner-uc.jpg);background-position:top}.recent-project a{color:#fff;text-decoration:none;display:flex;flex-direction:column;width:100%;justify-content:center}.recent-project .heading--kicker{position:relative;margin-bottom:1em}.recent-project .heading--kicker:after{border-top:8px solid #fff;border-right:5px solid transparent;border-left:5px solid transparent;content:'';position:absolute;left:50%;bottom:-10px;margin-left:-4px}.recent-project .btn{margin-top:2rem}@media (min-width:768px){.recent-project{position:relative}.recent-project .btn{display:block;opacity:0;-webkit-transition:opacity,.25s;transition:opacity,.25s;position:absolute;bottom:3em;left:50%;transform:translateX(-50%);margin-top:0}.recent-project .heading{-webkit-transition:transform,.3s;transition:transform,.3s}.recent-project a:focus .btn,.recent-project a:hover .btn{opacity:1}.recent-project a:focus .heading,.recent-project a:hover .heading{transform:translateY(-20px)}}.project-body{max-width:800px;margin-left:auto;margin-right:auto;line-height:1.6}.project-body a{color:currentColor}.project-list{list-style:none outside;margin:0;padding:0}.project-list .project{max-width:300px;margin-bottom:1.5em;margin-left:auto;margin-right:auto}@media (min-width:768px){.project-list{display:flex;flex-wrap:wrap;justify-content:space-around}.project-list .project{margin-bottom:1.5em;width:33.3333333%;float:left}}.project-list--text a{text-decoration:none;color:#332379}.project-list--text a:focus,.project-list--text a:hover{color:#000}.project{display:block;text-align:center}.project__link{text-decoration:none;color:#000}.project img{display:block;margin-bottom:.5em}@media (min-width:768px){.project__link{display:block;position:relative}.project__link:before{content:'';background:rgba(0,0,0,.6);position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;-webkit-transition:opacity,.25s;transition:opacity,.25s}.project__link:focus .project__title,.project__link:hover .project__title{opacity:1;transform:translate3d(-50%,-50%,0)}.project__link:focus:before,.project__link:hover:before{opacity:1}.project__title{width:100%;display:block;position:absolute;top:50%;left:50%;transform:translate3d(-50%,10px,0);color:#fff;opacity:0;-webkit-transition:all,.25s;transition:all,.25s;-webkit-transition-delay:.1s;transition-delay:.1s;text-transform:uppercase;font-size:1.4em}}.project-info{list-style:none outside;margin:2em 0;padding:0;display:flex;text-align:center}.project-info__block{width:33.33333%}.project-info__name{display:block}.social-list{font-size:2em;list-style:none outside;margin:0;padding:0}.social-list a{text-decoration:none;display:block;color:#332379;-webkit-transition:color,.25s;transition:color,.25s}.social-list a:focus,.social-list a:hover{color:#000}.social-list .hide-text{float:left}.social-list li{display:inline-block;margin-right:.5em}.social-list li:last-child{margin:0}@media (min-width:768px){.social-list li{margin-right:1em}}.heading--work{margin-bottom:0}.heading--work+*{margin-top:0}.work-list{list-style:none outside;margin:0;padding:0}.work-list__item{border-bottom:1px solid #ddd;padding-bottom:2em}.work-content{padding:1em}.work-content>:first-child{margin-top:0}.job-title{margin:0}.job-title em{font-style:normal;font-size:.8em;color:#666;display:block}.job-title em:before{content:'('}.job-title em:after{content:')'}@media (min-width:768px){.job-title em{display:inline}}.dates{display:block;margin-top:1em}@media (min-width:768px){.skills__comfortable,.skills__learning{width:50%;float:left}}.form fieldset{border:none;padding:0;margin:0}.form-group{clear:both;margin-bottom:1em}.form-label{display:block;margin-bottom:.25em}.form-input,.form-textarea{border:1px solid #ddd;display:block;width:100%;box-sizing:border-box;padding:.5em;transition:border-color .25s,background-color .25s;background-color:#f6f6f6}.form-input:focus,.form-textarea:focus{outline:none;border-color:#332379;background-color:#fff}.form-input--error{border-color:red}@media (min-width:768px){.form-input{width:50%;display:inline-block}}.form-textarea{height:8em}.form-textarea--error{border-color:red}@media (min-width:768px){.form-textarea{width:75%;display:inline-block}}.form-msg{margin-top:.5em;display:block}.form-msg--error{color:red}@media (min-width:768px){.form-msg--error{display:inline-block;margin-bottom:0;margin-left:1.5em}}@media (min-width:768px){.form-msg--textarea{display:block;margin-left:0;margin-bottom:1em}}.form-msg--success{color:green}.form-msg--hidden{display:none}
/*# sourceMappingURL=data:application/json;base64, */
